// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func NameEntryPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = BaseLayout("Enter Your Name", "Movie poll for Mewling Goat Tavern", NameEntryContent()).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func NameEntryContent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"container mx-auto max-w-md flex items-center justify-center min-h-screen\"><div class=\"bg-goat-700 p-8 rounded-xl shadow-xl\"><div class=\"text-center mb-8\"><h1 class=\"text-3xl font-bold text-tavern-500 mb-4\">Mewling Goat Tavern</h1><h2 class=\"text-xl text-tavern-400 mb-2\">Movie Poll</h2><p class=\"text-goat-300\">Enter your name to start voting on movies</p></div><!-- Main name entry form --><form id=\"nameForm\" hx-post=\"/api/start-poll\"><div class=\"mb-6\"><label for=\"username\" class=\"block text-sm font-medium text-goat-300 mb-2\">Your Name</label> <input type=\"text\" id=\"username\" name=\"username\" required class=\"w-full px-4 py-3 bg-goat-600 border border-goat-500 rounded-lg text-goat-100 placeholder-goat-400 focus:outline-none focus:ring-2 focus:ring-tavern-500 focus:border-transparent\" placeholder=\"Enter your name here...\" autocomplete=\"name\" hx-post=\"/api/check-name-similarity\" hx-trigger=\"blur delay:500ms\" hx-target=\"#nameVerification\" hx-indicator=\"#nameSpinner\"><div id=\"nameSpinner\" class=\"htmx-indicator mt-2\"><div class=\"text-tavern-400 text-sm\">Checking for similar names...</div></div></div><!-- Name verification prompt (hidden by default) --><div id=\"nameVerification\" class=\"mb-6 hidden\"><div class=\"bg-tavern-600/20 border border-tavern-500 rounded-lg p-4\"><div class=\"text-center\"><p class=\"text-tavern-300 mb-3\">This device has been used before. Did you mean one of these names?</p><div id=\"similarNames\" class=\"space-y-2 mb-4\"></div><div class=\"flex space-x-3 justify-center\"><button type=\"button\" id=\"confirmSimilarName\" class=\"bg-tavern-500 hover:bg-tavern-600 text-white px-4 py-2 rounded-lg text-sm transition-colors\">Yes, use this name</button> <button type=\"button\" id=\"rejectSimilarName\" class=\"bg-goat-600 hover:bg-goat-500 text-goat-200 px-4 py-2 rounded-lg text-sm transition-colors\">No, use my name</button></div></div></div></div><button type=\"submit\" class=\"w-full bg-tavern-500 hover:bg-tavern-600 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-tavern-500 focus:ring-offset-2 focus:ring-offset-goat-700\">Start Voting</button></form><div class=\"mt-6 text-center\"><p class=\"text-sm text-goat-400\">Your votes will be saved and you can change them anytime</p></div></div></div><script>\n\t\t// Handle name verification\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\tconst nameInput = document.getElementById('username');\n\t\t\tconst verificationDiv = document.getElementById('nameVerification');\n\t\t\tconst similarNamesDiv = document.getElementById('similarNames');\n\t\t\tconst confirmBtn = document.getElementById('confirmSimilarName');\n\t\t\tconst rejectBtn = document.getElementById('rejectSimilarName');\n\t\t\tlet currentSimilarNames = [];\n\t\t\tlet selectedName = '';\n\t\t\t\n\t\t\t// Handle similar name confirmation\n\t\t\tconfirmBtn.addEventListener('click', function() {\n\t\t\t\tif (selectedName) {\n\t\t\t\t\tnameInput.value = selectedName;\n\t\t\t\t\tverificationDiv.classList.add('hidden');\n\t\t\t\t\t// Submit the form with the confirmed name\n\t\t\t\t\tdocument.getElementById('nameForm').submit();\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// Handle similar name rejection\n\t\t\trejectBtn.addEventListener('click', function() {\n\t\t\t\tverificationDiv.classList.add('hidden');\n\t\t\t\t// Continue with original name\n\t\t\t});\n\t\t\t\n\t\t\t// Handle HTMX response for name similarity check\n\t\t\tdocument.body.addEventListener('htmx:afterRequest', function(event) {\n\t\t\t\tif (event.detail.xhr.status === 200) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = JSON.parse(event.detail.xhr.responseText);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (response.hasExisting) {\n\t\t\t\t\t\t\t// Device already has names, show them for selection\n\t\t\t\t\t\t\tselectedName = response.closestMatch || response.deviceNames[0];\n\t\t\t\t\t\t\tsimilarNamesDiv.innerHTML = '';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresponse.deviceNames.forEach((name, index) => {\n\t\t\t\t\t\t\t\tconst nameDiv = document.createElement('div');\n\t\t\t\t\t\t\t\tnameDiv.className = 'bg-tavern-500/30 border border-tavern-400 rounded p-3 cursor-pointer hover:bg-tavern-500/40 transition-colors';\n\t\t\t\t\t\t\t\tnameDiv.setAttribute('data-name', name);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst isClosest = name === response.closestMatch;\n\t\t\t\t\t\t\t\tconst isRecent = index === 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tnameDiv.innerHTML = `\n\t\t\t\t\t\t\t\t\t<span class=\"text-tavern-200 font-medium\">${name}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"text-tavern-400 text-sm ml-2\">\n\t\t\t\t\t\t\t\t\t\t${isClosest ? '(Closest match)' : isRecent ? '(Most recent)' : '(Previous name)'}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t`;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tnameDiv.addEventListener('click', function() {\n\t\t\t\t\t\t\t\t\t// Remove previous selection\n\t\t\t\t\t\t\t\t\tsimilarNamesDiv.querySelectorAll('div').forEach(div => {\n\t\t\t\t\t\t\t\t\t\tdiv.classList.remove('bg-tavern-500/50', 'ring-2', 'ring-tavern-400');\n\t\t\t\t\t\t\t\t\t\tdiv.classList.add('bg-tavern-500/30');\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Select this name\n\t\t\t\t\t\t\t\t\tthis.classList.remove('bg-tavern-500/30');\n\t\t\t\t\t\t\t\t\tthis.classList.add('bg-tavern-500/50', 'ring-2', 'ring-tavern-400');\n\t\t\t\t\t\t\t\t\tselectedName = this.getAttribute('data-name');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsimilarNamesDiv.appendChild(nameDiv);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tverificationDiv.classList.remove('hidden');\n\t\t\t\t\t\t} else if (response.hasSimilar) {\n\t\t\t\t\t\t\t// Found similar names, show them\n\t\t\t\t\t\t\tcurrentSimilarNames = response.similarNames;\n\t\t\t\t\t\t\tsimilarNamesDiv.innerHTML = '';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresponse.similarNames.forEach(name => {\n\t\t\t\t\t\t\t\tconst nameDiv = document.createElement('div');\n\t\t\t\t\t\t\t\tnameDiv.className = 'bg-tavern-500/30 border border-tavern-400 rounded p-3 cursor-pointer hover:bg-tavern-500/40 transition-colors';\n\t\t\t\t\t\t\t\tnameDiv.setAttribute('data-name', name);\n\t\t\t\t\t\t\t\tnameDiv.innerHTML = `<span class=\"text-tavern-200 font-medium\">${name}</span>`;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tnameDiv.addEventListener('click', function() {\n\t\t\t\t\t\t\t\t\t// Remove previous selection\n\t\t\t\t\t\t\t\t\tsimilarNamesDiv.querySelectorAll('div').forEach(div => {\n\t\t\t\t\t\t\t\t\t\tdiv.classList.remove('bg-tavern-500/50', 'ring-2', 'ring-tavern-400');\n\t\t\t\t\t\t\t\t\t\tdiv.classList.add('bg-tavern-500/30');\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Select this name\n\t\t\t\t\t\t\t\t\tthis.classList.remove('bg-tavern-500/30');\n\t\t\t\t\t\t\t\t\tthis.classList.add('bg-tavern-500/50', 'ring-2', 'ring-tavern-400');\n\t\t\t\t\t\t\t\t\tselectedName = this.getAttribute('data-name');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsimilarNamesDiv.appendChild(nameDiv);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tverificationDiv.classList.remove('hidden');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// No similar names found, hide verification\n\t\t\t\t\t\t\tverificationDiv.classList.add('hidden');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Error parsing name similarity response:', e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
