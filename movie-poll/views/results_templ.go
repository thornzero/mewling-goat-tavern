// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"strconv"

	"github.com/thornzero/movie-poll/types"
)

type ResultsData struct {
	Movies []types.VotingSummary
	Stats  types.VotingStats
}

func ResultsPage(data ResultsData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = BaseLayout("Results", "Movie Poll Results - See how your favorite movies ranked!", ResultsContent(data)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ResultsContent(data ResultsData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"min-h-screen bg-gradient-to-br from-goat-900 via-goat-800 to-goat-900\"><div class=\"container mx-auto px-4 py-8\"><!-- Header --><div class=\"text-center mb-8\"><h1 class=\"text-4xl font-bold text-tavern-400 mb-4\">üé¨ Movie Poll Results</h1><p class=\"text-goat-300 text-lg\">Movies ranked by their potential for creating shared new experiences!</p></div><!-- Appeal Score Explanation -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = AppealScoreExplanation().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- Statistics Cards -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = StatsCards(data.Stats).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Results List -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ResultsList(data.Movies).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Actions --><div class=\"text-center mt-8\"><a href=\"/\" class=\"btn-primary mr-4\">Vote on More Movies</a> <button onclick=\"window.location.reload()\" class=\"btn-secondary\">Refresh Results</button></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func AppealScoreExplanation() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div class=\"bg-goat-800 rounded-lg p-6 mb-8 border border-goat-600\"><h2 class=\"text-2xl font-bold text-tavern-400 mb-4\">üåü How Appeal Scores Work</h2><p class=\"text-goat-300 mb-4\">Movies are ranked by their potential for creating meaningful shared experiences. Higher scores mean better choices for group viewing!</p><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\"><div class=\"flex items-start space-x-3\"><span class=\"text-tavern-400 font-bold\">üåü</span><div><span class=\"font-semibold text-goat-200\">Appeal Score (0-10):</span> <span class=\"text-goat-300\">Overall group appeal rating</span></div></div><div class=\"flex items-start space-x-3\"><span class=\"text-tavern-400 font-bold\">üìä</span><div><span class=\"font-semibold text-goat-200\">Participation:</span> <span class=\"text-goat-300\">How many people voted on this movie</span></div></div><div class=\"flex items-start space-x-3\"><span class=\"text-tavern-400 font-bold\">üëÄ</span><div><span class=\"font-semibold text-goat-200\">Discovery Level:</span> <span class=\"text-goat-300\">% of voters who have seen it</span></div></div><div class=\"flex items-start space-x-3\"><span class=\"text-tavern-400 font-bold\">üÜï</span><div><span class=\"font-semibold text-goat-200\">Novelty:</span> <span class=\"text-goat-300\">% of voters who haven't seen it</span></div></div><div class=\"flex items-start space-x-3\"><span class=\"text-tavern-400 font-bold\">üéØ</span><div><span class=\"font-semibold text-goat-200\">Sweet Spot:</span> <span class=\"text-goat-300\">Perfect balance for group discovery</span></div></div><div class=\"flex items-start space-x-3\"><span class=\"text-tavern-400 font-bold\">ü§ù</span><div><span class=\"font-semibold text-goat-200\">Consensus:</span> <span class=\"text-goat-300\">How much the group agrees on it</span></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func StatsCards(stats types.VotingStats) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\"><div class=\"bg-goat-700 p-6 rounded-lg text-center\"><div class=\"text-3xl font-bold text-tavern-400 mb-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(formatInt(stats.TotalMovies))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 98, Col: 34}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div><div class=\"text-goat-300\">Movies in Poll</div></div><div class=\"bg-goat-700 p-6 rounded-lg text-center\"><div class=\"text-3xl font-bold text-tavern-400 mb-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(formatInt(stats.TotalVotes))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 104, Col: 33}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div><div class=\"text-goat-300\">Total Votes Cast</div></div><div class=\"bg-goat-700 p-6 rounded-lg text-center\"><div class=\"text-3xl font-bold text-tavern-400 mb-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(formatInt(stats.UniqueVoters))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 110, Col: 35}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div><div class=\"text-goat-300\">Active Voters</div></div><div class=\"bg-goat-700 p-6 rounded-lg text-center\"><div class=\"text-3xl font-bold text-tavern-400 mb-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(formatFloat(stats.AverageAppealScore))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 116, Col: 43}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div><div class=\"text-goat-300\">Avg Appeal Score</div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ResultsList(movies []types.VotingSummary) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<div class=\"space-y-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if len(movies) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<div class=\"text-center py-12\"><div class=\"text-6xl mb-4\">üé≠</div><h3 class=\"text-2xl font-bold text-goat-300 mb-2\">No Results Yet</h3><p class=\"text-goat-400\">Be the first to vote on some movies!</p></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"space-y-4\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for i, movie := range movies {
				templ_7745c5c3_Err = MovieResultCard(movie, i+1).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func MovieResultCard(movie types.VotingSummary, rank int) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var10 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var10 == nil {
			templ_7745c5c3_Var10 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<div class=\"bg-goat-700 rounded-lg p-6 flex items-center space-x-6\"><!-- Rank Badge --><div class=\"flex-shrink-0\"><div class=\"w-12 h-12 bg-tavern-400 text-goat-900 rounded-full flex items-center justify-center font-bold text-lg\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 string
		templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(rank))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 146, Col: 24}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "</div></div><!-- Movie Poster --><div class=\"flex-shrink-0\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if movie.PosterPath != nil && *movie.PosterPath != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<img src=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs("https://image.tmdb.org/t/p/w200" + *movie.PosterPath)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 153, Col: 64}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "\" alt=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(movie.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 154, Col: 22}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\" class=\"w-20 h-30 object-cover rounded-lg\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<div class=\"w-20 h-30 bg-goat-600 rounded-lg flex items-center justify-center\"><span class=\"text-goat-400 text-xs\">No Image</span></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "</div><!-- Movie Info --><div class=\"flex-grow\"><h3 class=\"text-xl font-bold text-tavern-400 mb-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(movie.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 166, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, " ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if movie.Year != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<span class=\"text-goat-300 font-normal\">(")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(*movie.Year))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 168, Col: 73}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, ")</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "</h3>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if movie.Overview != nil && *movie.Overview != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "<p class=\"text-goat-400 text-sm mb-3 line-clamp-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(*movie.Overview)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 173, Col: 22}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "</p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "<!-- Stats --><div class=\"flex flex-wrap gap-4 text-sm\"><div class=\"flex items-center space-x-2\"><span class=\"text-goat-300\">üåü Appeal Score:</span> <span class=\"font-bold text-tavern-400\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var17 string
		templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(formatNormalizedScore(movie.AppealScore, 10.0, "Excellent", "Poor"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 181, Col: 75}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "</span></div><div class=\"flex items-center space-x-2\"><span class=\"text-goat-300\">üìä Participation:</span> <span class=\"font-bold text-tavern-400\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var18 string
		templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(formatNormalizedParticipation(movie.VoteCount))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 187, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "</span></div><div class=\"flex items-center space-x-2\"><span class=\"text-goat-300\">üëÄ Discovery Level:</span> <span class=\"font-bold text-tavern-400\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var19 string
		templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(formatNormalizedDiscovery(movie.SeenCount, movie.VoteCount))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 193, Col: 67}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "</span></div><div class=\"flex items-center space-x-2\"><span class=\"text-goat-300\">üÜï Novelty:</span> <span class=\"font-bold text-tavern-400\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var20 string
		templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(formatNormalizedNovelty(movie.VisibilityRatio))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 199, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "</span></div></div></div><!-- Appeal Score Bar --><div class=\"flex-shrink-0 w-32\"><div class=\"text-center mb-2\"><span class=\"text-sm font-bold text-tavern-400\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var21 string
		templ_7745c5c3_Var21, templ_7745c5c3_Err = templ.JoinStringErrs(formatFloat(movie.AppealScore))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 208, Col: 37}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var21))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "/10</span></div><div class=\"w-full bg-goat-600 rounded-full h-3\"><div class=\"bg-gradient-to-r from-tavern-400 to-tavern-300 h-3 rounded-full transition-all duration-500\" style=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var22 string
		templ_7745c5c3_Var22, templ_7745c5c3_Err = templruntime.SanitizeStyleAttributeValues("width: " + formatPercent(movie.AppealScore/10.0))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/results.templ`, Line: 214, Col: 62}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "\"></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper functions
func formatInt(value interface{}) string {
	if value == nil {
		return "0"
	}
	if intVal, ok := value.(int); ok {
		return strconv.Itoa(intVal)
	}
	return "0"
}

func formatFloat(value interface{}) string {
	if value == nil {
		return "0.0"
	}
	if floatVal, ok := value.(float64); ok {
		return strconv.FormatFloat(floatVal, 'f', 1, 64)
	}
	return "0.0"
}

func formatPercent(value interface{}) string {
	if value == nil {
		return "0%"
	}
	var floatVal float64
	switch v := value.(type) {
	case float64:
		floatVal = v
	case int:
		floatVal = float64(v)
	default:
		return "0%"
	}
	return strconv.FormatFloat(floatVal*100, 'f', 1, 64) + "%"
}

// formatNormalizedScore formats any score to a 0-10 scale with descriptive text
func formatNormalizedScore(value interface{}, maxValue float64, highDesc, lowDesc string) string {
	if value == nil {
		return "0.0 (" + lowDesc + ")"
	}

	var score float64
	switch v := value.(type) {
	case float64:
		score = v
	case int:
		score = float64(v)
	default:
		return "0.0 (" + lowDesc + ")"
	}

	// Normalize to 0-10 scale
	normalizedScore := (score / maxValue) * 10.0
	if normalizedScore > 10.0 {
		normalizedScore = 10.0
	}

	var description string
	switch {
	case normalizedScore >= 8.0:
		description = highDesc
	case normalizedScore >= 6.0:
		description = "Great"
	case normalizedScore >= 4.0:
		description = "Good"
	case normalizedScore >= 2.0:
		description = "Fair"
	default:
		description = lowDesc
	}

	return strconv.FormatFloat(normalizedScore, 'f', 1, 64) + " (" + description + ")"
}

// formatNormalizedParticipation normalizes vote count to 0-10 scale
func formatNormalizedParticipation(totalVotes interface{}) string {
	if totalVotes == nil {
		return "0.0 (None)"
	}

	var votes int
	switch v := totalVotes.(type) {
	case int:
		votes = v
	case float64:
		votes = int(v)
	default:
		return "0.0 (None)"
	}

	// Normalize participation: 0 votes = 0, 10+ votes = 10
	// This creates a reasonable scale where 1-2 votes = 1-2, 5 votes = 5, 10+ votes = 10
	normalizedScore := float64(votes)
	if normalizedScore > 10.0 {
		normalizedScore = 10.0
	}

	var description string
	switch {
	case normalizedScore >= 8.0:
		description = "High"
	case normalizedScore >= 6.0:
		description = "Good"
	case normalizedScore >= 4.0:
		description = "Moderate"
	case normalizedScore >= 2.0:
		description = "Low"
	default:
		description = "None"
	}

	return strconv.FormatFloat(normalizedScore, 'f', 1, 64) + " (" + description + ")"
}

// formatNormalizedDiscovery normalizes discovery level to 0-10 scale
func formatNormalizedDiscovery(seenCount, totalVotes interface{}) string {
	if seenCount == nil || totalVotes == nil {
		return "0.0 (Unknown)"
	}

	var seen, total int
	switch v := seenCount.(type) {
	case int:
		seen = v
	case float64:
		seen = int(v)
	default:
		return "0.0 (Unknown)"
	}

	switch v := totalVotes.(type) {
	case int:
		total = v
	case float64:
		total = int(v)
	default:
		return "0.0 (Unknown)"
	}

	if total == 0 {
		return "0.0 (No votes)"
	}

	// Calculate percentage of people who have seen it
	percentage := float64(seen) / float64(total)

	// Normalize to 0-10 scale (0% seen = 0, 100% seen = 10)
	normalizedScore := percentage * 10.0

	var description string
	switch {
	case normalizedScore >= 8.0:
		description = "Well-known"
	case normalizedScore >= 6.0:
		description = "Popular"
	case normalizedScore >= 4.0:
		description = "Moderate"
	case normalizedScore >= 2.0:
		description = "Niche"
	default:
		description = "Hidden gem"
	}

	return strconv.FormatFloat(normalizedScore, 'f', 1, 64) + " (" + description + ")"
}

// formatNormalizedNovelty normalizes novelty level to 0-10 scale
func formatNormalizedNovelty(visibilityRatio interface{}) string {
	if visibilityRatio == nil {
		return "0.0 (Unknown)"
	}

	var ratio float64
	switch v := visibilityRatio.(type) {
	case float64:
		ratio = v
	case int:
		ratio = float64(v)
	default:
		return "0.0 (Unknown)"
	}

	// Calculate novelty percentage (inverse of visibility)
	noveltyPercentage := 1.0 - ratio

	// Normalize to 0-10 scale (0% novel = 0, 100% novel = 10)
	normalizedScore := noveltyPercentage * 10.0

	var description string
	switch {
	case normalizedScore >= 8.0:
		description = "Very novel"
	case normalizedScore >= 6.0:
		description = "Novel"
	case normalizedScore >= 4.0:
		description = "Mixed"
	case normalizedScore >= 2.0:
		description = "Familiar"
	default:
		description = "Well-known"
	}

	return strconv.FormatFloat(normalizedScore, 'f', 1, 64) + " (" + description + ")"
}

var _ = templruntime.GeneratedTemplate
